kind: Service
apiVersion: v1
metadata: 
    name: todo
spec:
    selector:
        app: todo
    type: NodePort
    ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: todo
  labels: 
    app: todo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todo
template:
  metadata:
    labels:
      app: todo
  spec:
    imagePullSecrets:
      - name: gitlab_auth
    containers:
      - name: todo
        image: "${DOCKER_IMAGE_TAG}"
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          value: "postgres://${DB_USER}:${DB_PASS}@tododb/todo"
        ports:
        - containerPort: 5000
---
kind: Service
apiVersion: v1
metadata: 
    name: tododb
spec:
    selector:
        app: tododb
    type: NodePort
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tododb
  labels: 
    app: tododb
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: tododb
  template:
    metadata:
      labels: 
        app: tododb
    spec:
      containers:
        - name: tododb
          image: postgres:10.4
          env:
          - name: POSTGRES_USER
            value: "${DB_USER}"
          - name: POSTGRES_PASSWORD
            value: "${DB_PASS}"
          - name: PGDATA
            value: "/data/pgdata"
          volumeMounts:
          - mountPath: /data
            name: todo-data
      volumes:
        - name: todo-data
          persisentVolumeClaim:
            claimName: todo-data
---
kind: PersisentVolumeClaim
apiVersion: v1
metadata:
    name: todo-data
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: todo-ingress
spec:
    rules:
      - host: todo.deploy.k8s.anvard.org
        http:
          paths:
            - backend:
                serviceName: todo
                servicePort: 80
