stages:
    - test
    - build
    - deploy

variables:
    DOCKER_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

test-10:
    stage: test
    image: node:10
    cache:
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - node_modules/
    artifacts:
        when: always
        expire_in: 1 week
        paths:
            - package-lock.json
            - npm-audit.json
    services:
        - name: postgres:10
          alias: db
    variables:
        POSTGRES_DB: todo
        POSTGRES_USER: "${DB_USER}"
        POSTGRES_PASS: "${DB_PASS}"
        DATABASE_URL: "postgres://${DB_USER}:${DB_PASS}@db/todo"
    script:
        - ./ci-test.sh

test-8:
    stage: test
    image: node:8
    #cache:
    #    key: ${CI_COMMIT_REF_SLUG}
    #    paths:
    #        - node_modules/
    artifacts:
        when: always
        expire_in: 1 week
        paths:
            - package-lock.json
            - npm-audit.json
    services:
        - name: postgres:10
          alias: db
    variables:
        POSTGRES_DB: todo
        POSTGRES_USER: "${DB_USER}"
        POSTGRES_PASS: "${DB_PASS}"
        DATABASE_URL: "postgres://${DB_USER}:${DB_PASS}@db/todo"
    script:
        - ./ci-test.sh

build:
    stage: build
    image: docker:stable
    services:
        - docker:dind
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
    before_script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker info
    script:
        - docker build -t $DOCKER_IMAGE_TAG .
        - docker push $DOCKER_IMAGE_TAG

deploy:
    stage: deploy
    environment:
        name: production
        url: http://todo.deploy.k8s.anvard.org/
    image: roffe/kubectl:v1.13.0
    script:
        - kubectl delete --ignore-not-found=true secret gitlab-auth
        - kubectl create secret docker-registry gitlab-auth --docker-server=$CI_REGISTRY --docker-username=$KUBE_PULL
        - cat k8s.yaml | envsubst | kubectl apply -f -
    only:
        - master
